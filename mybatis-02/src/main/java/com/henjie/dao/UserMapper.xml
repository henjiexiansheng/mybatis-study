<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE userMapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-userMapper.dtd">
<!--namespace绑定一个特定的DAO/Mappr接口-->
<userMapper namespace="com.henjie.dao.UserMapper">
<!--    查询语句 id的标签相当于实现类（UserDaoimpl）重写方法的名字-->
<!--    resultType代表返回结果的类型，resultMap代表返回的结果是一个集合-->
    <select id="getUserList" resultType="com.henjie.pojo.User">
        select * from mybatis.user;
    </select>

<!--    根据Id查询-->
    <select id="getUserById" resultType="com.henjie.pojo.User" parameterType="int">
        select * from mybatis.user where id = #{id};
    </select>
    
<!--    模糊查询,%加在这里有Sql注入的风险-->
    <select id="getUserLike" resultType="com.henjie.pojo.User">
        select * from mybatis.user where name like "%"#{value}"%";
    </select>

<!--    插入一个用户-->
<!--    注：对象的属性可以直接取出-->
    <insert id="addUser" parameterType="com.henjie.pojo.User">
        insert into mybatis.user (id,name,pwd) values (#{id},#{name},#{pwd});
    </insert>

<!--    插入一个用户,应用map,传递map的key(aaa,bbb,ccc),key可以为任意东西,无需按照user-->
    <insert id="addUser2" parameterType="map">
        insert into mybatis.user (id,name,pwd) values (#{aaa},#{bbb},#{ccc});
    </insert>

<!--    修改用户-->
    <update id="updateUser" parameterType="com.henjie.pojo.User">
        update mybatis.user set name=#{name},pwd=#{pwd} where id =#{id};
    </update>

<!--    删除用户-->
    <delete id="deleteUser" parameterType="int">
        delete from mybatis.user where id = #{id};
    </delete>
</userMapper>